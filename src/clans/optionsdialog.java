/*
 * optionsdialog.java
 *
 * Created on March 11, 2005, 5:06 PM
 */
package clans;
/**
 *
 * @author  tancred
 */
public class optionsdialog extends javax.swing.JFrame {
    
    /** Creates new form optionsdialog */
    public optionsdialog(ClusteringWithGui parent) {
        this.parent=parent;
        this.setTitle("CLANS options");
        initComponents();
        readoptions();
        repaint();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        settingpanel = new javax.swing.JPanel();
        coollabel = new javax.swing.JLabel();
        coolfield = new javax.swing.JTextField();
        currcoollabel = new javax.swing.JLabel();
        currcoolfield = new javax.swing.JTextField();
        attvalpowlabel = new javax.swing.JLabel();
        attfield = new javax.swing.JTextField();
        attpowlabel = new javax.swing.JLabel();
        attvalpowtextfield = new javax.swing.JTextField();
        repvallabel = new javax.swing.JLabel();
        repfield = new javax.swing.JTextField();
        reppowlabel = new javax.swing.JLabel();
        repvalpowtextfield = new javax.swing.JTextField();
        damplabel = new javax.swing.JLabel();
        dampfield = new javax.swing.JTextField();
        minattlabel = new javax.swing.JLabel();
        minattfield = new javax.swing.JTextField();
        roundslabel = new javax.swing.JLabel();
        roundstextfield = new javax.swing.JTextField();
        maxrepdistbutton = new javax.swing.JButton();
        maxmovefield = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        settingpanel.setLayout(new java.awt.GridLayout(0, 2));

        coollabel.setText("cooling");
        coollabel.setToolTipText("if <1 slowly cools the system (slows down the movement)");
        settingpanel.add(coollabel);

        coolfield.setText("1");
        coolfield.setToolTipText("value from 0(fast cooling) to 1(no cooling).");
        coolfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coolfieldActionPerformed(evt);
            }
        });

        settingpanel.add(coolfield);

        currcoollabel.setText("Current cooling");
        settingpanel.add(currcoollabel);

        currcoolfield.setBackground(new java.awt.Color(204, 204, 204));
        currcoolfield.setText("1");
        currcoolfield.setToolTipText("current \"temprature\"");
        currcoolfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currcoolfieldActionPerformed(evt);
            }
        });

        settingpanel.add(currcoolfield);

        attvalpowlabel.setText("Attract value");
        attvalpowlabel.setToolTipText("How is the attraction value calculated (val=multiplier, exp=2 = scales with distance **2)");
        settingpanel.add(attvalpowlabel);

        attfield.setText("10");
        attfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attfieldActionPerformed(evt);
            }
        });

        settingpanel.add(attfield);

        attpowlabel.setText("Attract exponent (int)");
        settingpanel.add(attpowlabel);

        attvalpowtextfield.setText("2");
        attvalpowtextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attvalpowtextfieldActionPerformed(evt);
            }
        });

        settingpanel.add(attvalpowtextfield);

        repvallabel.setText("Repulse value");
        repvallabel.setToolTipText("How is the repulsion value calculated (value=multiplier, exp=2 scales with 1/distance**2)");
        settingpanel.add(repvallabel);

        repfield.setText("5");
        repfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repfieldActionPerformed(evt);
            }
        });

        settingpanel.add(repfield);

        reppowlabel.setText("Repulse exponent (int)");
        settingpanel.add(reppowlabel);

        repvalpowtextfield.setText("1");
        repvalpowtextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repvalpowtextfieldActionPerformed(evt);
            }
        });

        settingpanel.add(repvalpowtextfield);

        damplabel.setText("Dampening");
        damplabel.setToolTipText("How much of last rounds movement influences this round");
        settingpanel.add(damplabel);

        dampfield.setText("0.2");
        dampfield.setToolTipText("0=add new movement vector to last movement; 1=only use new movement vector");
        dampfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dampfieldActionPerformed(evt);
            }
        });

        settingpanel.add(dampfield);

        minattlabel.setText("min. attraction");
        minattlabel.setToolTipText("minimal attraction that exists between any point and the origin (scales with distance) ( centers graph & limits size)");
        settingpanel.add(minattlabel);

        minattfield.setText("1");
        minattfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minattfieldActionPerformed(evt);
            }
        });

        settingpanel.add(minattfield);

        roundslabel.setText("Cluster for rounds: (-1=infinite)");
        settingpanel.add(roundslabel);

        roundstextfield.setText("-1");
        roundstextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundstextfieldActionPerformed(evt);
            }
        });

        settingpanel.add(roundstextfield);

        maxrepdistbutton.setText("maxmove");
        maxrepdistbutton.setToolTipText("Some X-forwarding does not recognize pressing \"return\". In these cases use this button to transmit parameter changes.");
        maxrepdistbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxrepdistbuttonActionPerformed(evt);
            }
        });

        settingpanel.add(maxrepdistbutton);

        maxmovefield.setText("0.1");
        maxmovefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxmovefieldActionPerformed(evt);
            }
        });

        settingpanel.add(maxmovefield);

        getContentPane().add(settingpanel, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void roundstextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundstextfieldActionPerformed
        // set the number of rounds to cluster at a time
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_roundstextfieldActionPerformed

    private void currcoolfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currcoolfieldActionPerformed
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_currcoolfieldActionPerformed

    private void maxrepdistbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxrepdistbuttonActionPerformed
        //for X-forwarding; solaris has problems recognizing returns; for this
        //I therefore use this button to re-read the values entered in the various fields
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_maxrepdistbuttonActionPerformed

    private void maxmovefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxmovefieldActionPerformed
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_maxmovefieldActionPerformed

    private void minattfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minattfieldActionPerformed
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_minattfieldActionPerformed

    private void dampfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dampfieldActionPerformed
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_dampfieldActionPerformed

    private void repvalpowtextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repvalpowtextfieldActionPerformed
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_repvalpowtextfieldActionPerformed

    private void repfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repfieldActionPerformed
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_repfieldActionPerformed

    private void attvalpowtextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attvalpowtextfieldActionPerformed
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_attvalpowtextfieldActionPerformed

    private void attfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attfieldActionPerformed
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_attfieldActionPerformed

    private void coolfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coolfieldActionPerformed
        parent.data.changedvals=true;
        if(parent.checkstop(false)==true){//if thread is stopped
            parent.updatevals();
            parent.repaint();
        }
    }//GEN-LAST:event_coolfieldActionPerformed
    
    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
    //    new optionsdialog(new javax.swing.JFrame(), true).show();
    //}
    
    ClusteringWithGui parent=null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField attfield;
    private javax.swing.JLabel attpowlabel;
    private javax.swing.JLabel attvalpowlabel;
    public javax.swing.JTextField attvalpowtextfield;
    public javax.swing.JTextField coolfield;
    private javax.swing.JLabel coollabel;
    public javax.swing.JTextField currcoolfield;
    private javax.swing.JLabel currcoollabel;
    public javax.swing.JTextField dampfield;
    private javax.swing.JLabel damplabel;
    public javax.swing.JTextField maxmovefield;
    private javax.swing.JButton maxrepdistbutton;
    public javax.swing.JTextField minattfield;
    private javax.swing.JLabel minattlabel;
    public javax.swing.JTextField repfield;
    private javax.swing.JLabel reppowlabel;
    private javax.swing.JLabel repvallabel;
    public javax.swing.JTextField repvalpowtextfield;
    private javax.swing.JLabel roundslabel;
    public javax.swing.JTextField roundstextfield;
    private javax.swing.JPanel settingpanel;
    // End of variables declaration//GEN-END:variables
    
    void readoptions(){
     //read the parameters from the parent
        attfield.setText(String.valueOf(parent.data.attfactor));
        repfield.setText(String.valueOf(parent.data.repfactor));
        dampfield.setText(String.valueOf(parent.data.dampening));
        coolfield.setText(String.valueOf(parent.data.cooling));
        currcoolfield.setText(String.valueOf(parent.data.currcool));
        minattfield.setText(String.valueOf(parent.data.minattract));
        maxmovefield.setText(String.valueOf(parent.data.maxmove));
        attvalpowtextfield.setText(String.valueOf(parent.data.attvalpow));
        repvalpowtextfield.setText(String.valueOf(parent.data.repvalpow));
        roundstextfield.setText(String.valueOf(parent.data.roundslimit));
    }
    
}
