/*
 * clusterwindow.java
 *
 * Created on March 9, 2004, 3:25 PM
 */
package clans;
import java.util.*;
/**
 *
 * @author  tancred
 */
public class clusterwindow extends javax.swing.JDialog {
    
    /** Creates new form clusterwindow */
    //public clusterwindow(java.awt.Frame parent, boolean modal) {
    //    super(parent, modal);
    //    initComponents();
    //}
    
    public clusterwindow(ClusteringWithGui parent, Vector clustervec,String label,boolean didbootstrap){
        //super(parent, false);
        this.parent=parent;
        this.clustervec=clustervec;
        this.didbootstrap=didbootstrap;
        this.clusternames=getclusternames(clustervec);
        this.setTitle(label);
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        scrollpanel = new javax.swing.JScrollPane();
        clusterlist = new javax.swing.JList(clusternames);
        jPanel2 = new javax.swing.JPanel();
        addtoseqgroupsbutton = new javax.swing.JButton();
        addtoindividualseqgroupsbutton = new javax.swing.JButton();
        closebutton = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

        clusterlist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                clusterlistValueChanged(evt);
            }
        });

        scrollpanel.setViewportView(clusterlist);

        jPanel1.add(scrollpanel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        addtoseqgroupsbutton.setText("Add to sequence groups");
        addtoseqgroupsbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtoseqgroupsbuttonActionPerformed(evt);
            }
        });

        jPanel2.add(addtoseqgroupsbutton);

        addtoindividualseqgroupsbutton.setText("Add each as separate sequence group");
        addtoindividualseqgroupsbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtoindividualseqgroupsbuttonActionPerformed(evt);
            }
        });

        jPanel2.add(addtoindividualseqgroupsbutton);

        closebutton.setText("Close");
        closebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebuttonActionPerformed(evt);
            }
        });

        jPanel2.add(closebutton);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents
    
    private void addtoindividualseqgroupsbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtoindividualseqgroupsbuttonActionPerformed
        //add each of the currently selected clusters as separate sequence group
        String newname=javax.swing.JOptionPane.showInputDialog(this,"Base group name:",this.getTitle());
        if(newname!=null && newname.length()==0){
            return;
        }
        int[] selectedvals=clusterlist.getSelectedIndices();
        if(java.lang.reflect.Array.getLength(selectedvals)==0){
            return;
        }
        int currcount=0;
        int mysize;
        int[] myarr;
        for(int i=java.lang.reflect.Array.getLength(selectedvals);--i>=0;){
            myarr=((cluster)clustervec.elementAt(selectedvals[i])).member;
            mysize=java.lang.reflect.Array.getLength(myarr);
            seqgroup newgroup=new seqgroup();
            newgroup.name=newname+"_"+i;
            newgroup.color=java.awt.Color.red;
            newgroup.sequences=myarr;
            newgroup.type=0;
            newgroup.size=parent.data.groupsize;
            parent.data.seqgroupsvec.addElement(newgroup);
        }//end for i
        parent.repaint();
    }//GEN-LAST:event_addtoindividualseqgroupsbuttonActionPerformed
    
    private void addtoseqgroupsbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtoseqgroupsbuttonActionPerformed
        // add the currently selected groups to the seqgroups vector
        String newname=javax.swing.JOptionPane.showInputDialog(this,"Group name:","selected sequences");
        if(newname!=null && newname.length()==0){
            return;
        }
        int[] selectedvals=clusterlist.getSelectedIndices();
        if(java.lang.reflect.Array.getLength(selectedvals)==0){
            return;
        }
        int newsize=0;
        for(int i=java.lang.reflect.Array.getLength(selectedvals);--i>=0;){
            newsize+=((cluster)clustervec.elementAt(selectedvals[i])).members();
        }//end for i
        //now add all the values to a new array
        int[] newselected=new int[newsize];
        int currcount=0;
        int mysize;
        int[] myarr;
        for(int i=java.lang.reflect.Array.getLength(selectedvals)-1;i>=0;i--){
            myarr=((cluster)clustervec.elementAt(selectedvals[i])).member;
            mysize=java.lang.reflect.Array.getLength(myarr);
            for(int j=0;j<mysize;j++){
                newselected[j+currcount]=myarr[j];
            }//end for j
            currcount+=mysize;
        }//end for i
        seqgroup newgroup=new seqgroup();
        newgroup.name=newname;
        newgroup.color=java.awt.Color.red;
        newgroup.sequences=newselected;
        newgroup.type=0;
        newgroup.size=parent.data.groupsize;
        parent.data.seqgroupsvec.addElement(newgroup);
        parent.repaint();
    }//GEN-LAST:event_addtoseqgroupsbuttonActionPerformed
    
    private void closebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebuttonActionPerformed
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_closebuttonActionPerformed
    
    private void clusterlistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_clusterlistValueChanged
        //update the selected sequences in parent
        int[] selectedvals=clusterlist.getSelectedIndices();
        int newsize=0;
        for(int i=java.lang.reflect.Array.getLength(selectedvals)-1;i>=0;i--){
            newsize+=((cluster)clustervec.elementAt(selectedvals[i])).members();
        }//end for i
        //now add all the values to a new array
        int[] newselected=new int[newsize];
        float[] clusterconf=null;
        if(didbootstrap){
            //System.out.println("not using sequence confidences");
            clusterconf=new float[newsize];
        }
        int currcount=0;
        int mysize;
        int[] myarr;
        float[] myconf;
        for(int i=java.lang.reflect.Array.getLength(selectedvals)-1;i>=0;i--){
            myarr=((cluster)clustervec.elementAt(selectedvals[i])).member;
            myconf=((cluster)clustervec.elementAt(selectedvals[i])).seqconfidence;
            mysize=java.lang.reflect.Array.getLength(myarr);
            if(didbootstrap){//was: myconf!=null){
                for(int j=0;j<mysize;j++){
                    newselected[j+currcount]=myarr[j];
                    clusterconf[j+currcount]=myconf[j];
                }//end for j
            }else{
                for(int j=0;j<mysize;j++){
                    newselected[j+currcount]=myarr[j];
                }//end for j
            }
            currcount+=mysize;
        }//end for i
        parent.data.selectednames=newselected;
        parent.clusterconf=clusterconf;
        parent.repaint();
    }//GEN-LAST:event_clusterlistValueChanged
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
    //    new clusterwindow(new javax.swing.JFrame(), true).show();
    //}
    
    ClusteringWithGui parent;
    Vector clustervec;
    String[] clusternames;
    boolean didbootstrap=false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtoindividualseqgroupsbutton;
    private javax.swing.JButton addtoseqgroupsbutton;
    private javax.swing.JButton closebutton;
    private javax.swing.JList clusterlist;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane scrollpanel;
    // End of variables declaration//GEN-END:variables
    
    String[] getclusternames(Vector invec){
        //convert the cluster to sth displayable as a String
        //clustername and number of elements for example
        int vecnum=invec.size();
        String[] retarr=new String[vecnum];
        for(int i=0;i<vecnum;i++){
            if(((cluster)invec.elementAt(i)).clusterconfidence>-1){
                retarr[i]=((cluster)invec.elementAt(i)).name+" ("+((cluster)invec.elementAt(i)).members()+" sequences) (jacknife:" +((cluster)invec.elementAt(i)).clusterconfidence*100+"%)";
            }else{
                retarr[i]=((cluster)invec.elementAt(i)).name+" ("+((cluster)invec.elementAt(i)).members()+" sequences)";
            }
        }//end for i
        return retarr;
    }//end getclusternames
    
}//end clusterwindow
